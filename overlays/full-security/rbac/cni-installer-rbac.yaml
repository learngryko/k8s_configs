# ClusterRole for the CNI installer, allows serviceaccount token creation and get
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cni-installer
rules:
  # allow to create tokens for serviceaccounts
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
  # allow to get serviceaccounts
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get"]

---
# Bind cni-installer ClusterRole to calico-node serviceaccount in calico-system
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cni-installer-calico-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cni-installer
subjects:
  - kind: ServiceAccount
    name: calico-node
    namespace: calico-system

---
# ClusterRole for Calico components, allows access to all Calico CRDs and key K8s resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: calico-crd-access
rules:
  # allow full access to all Calico CRDs
  - apiGroups: ["crd.projectcalico.org"]
    resources: ["*"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # allow to get, list, watch, patch and update pods and nodes (patch needed for pod/status updates!)
  - apiGroups: [""]
    resources: ["pods", "pods/status", "namespaces", "nodes", "serviceaccounts"]
    verbs: ["get", "list", "watch", "patch", "update"]
  # allow full access to K8s NetworkPolicies
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# Bind calico-crd-access ClusterRole to both calico-cni-plugin and calico-kube-controllers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calico-crd-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-crd-access
subjects:
  - kind: ServiceAccount
    name: calico-cni-plugin
    namespace: calico-system
  - kind: ServiceAccount
    name: calico-kube-controllers
    namespace: calico-system

---
# ClusterRole for calico-node to access Kubernetes nodes and pods (fixes CNI CrashLoop!)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: calico-node
rules:
  # allow access to nodes (MUST HAVE for calico-node)
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "patch", "update"]
  # allow access to pods, pods/status, namespaces, serviceaccounts
  - apiGroups: [""]
    resources: ["pods", "pods/status", "namespaces", "serviceaccounts"]
    verbs: ["get", "list", "watch", "patch", "update"]

---
# Bind calico-node ClusterRole to calico-node serviceaccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calico-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calico-node
subjects:
  - kind: ServiceAccount
    name: calico-node
    namespace: calico-system
