apiVersion: crd.projectcalico.org/v1
kind: GlobalNetworkPolicy
metadata:
  name: global-default-security
spec:
  # High order ensures namespace-scoped policies take precedence.
  order: 1000
  selector: all()

  ingress:
    # Allow all ingress traffic within the argocd namespace.
    - action: Allow
      source:
        namespaceSelector: 'name == "argocd"'
      destination:
        namespaceSelector: 'name == "argocd"'
      comment: Allow ingress within argocd namespace

    # Allow ingress traffic from the monitoring namespace (e.g., Prometheus scraping).
    - action: Allow
      source:
        namespaceSelector: 'name == "monitoring"'
      comment: Allow ingress from monitoring namespace

    # (Optional) Allow ingress from kube-dns if DNS discovery over TCP is needed.
    # - action: Allow
    #   source:
    #     namespaceSelector: 'k8s.io/metadata.name == "kube-system"'
    #     podSelector: 'k8s-app == "kube-dns"'
    #   protocol: TCP
    #   destination:
    #     ports: [53]
    #   comment: Allow ingress DNS over TCP

    # Deny all other ingress traffic.
    - action: Deny
      source: {}
      comment: Deny all other ingress

    egress:
    - action: Allow
      destination:
        namespaceSelector: 'name == "argocd"'
      comment: Allow egress to argocd namespace

    - action: Allow
      destination:
        namespaceSelector: 'k8s.io/metadata.name == "kube-system"'
        podSelector: 'k8s-app == "kube-dns"'
        ports:
          - 53
      protocol: UDP
      comment: Allow egress DNS (UDP 53) to kube-dns

    - action: Allow
      destination:
        namespaceSelector: 'name == "monitoring"'
      comment: Allow egress to monitoring namespace

    - action: Allow
      destination:
        namespaceSelector: 'k8s.io/metadata.name == "kube-system"'
      comment: Allow egress to kube-system namespace

    - action: Allow
      destination:
        ports:
          - 443
      protocol: TCP
      comment: Allow egress to Kubernetes API server (by port)

    # (Optional) Allow egress to the internet for pulling images
    # - action: Allow
    #   destination:
    #     nets: ["0.0.0.0/0"]
    #     ports:
    #       - 443
    #   protocol: TCP
    #   comment: Allow egress to internet for container image pulls

    - action: Deny
      destination: {}
      comment: Deny all other egress
